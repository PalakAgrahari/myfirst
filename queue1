#include<stdio.h>
#include<stdlib.h>
#define TRUE 1;
#define FALSE 0;
#define SIZE 10
struct queue
{
    char item[10];
    int front;
    int rear;
};
void initialize(struct queue *q)
{
   q->rear=-1;
   q->front=0;
}
int IsEmpty(struct queue *q)
{
    if(q->rear-q->front+1 == 0)
        return TRUE;

        return FALSE;
}
void EnQueue(struct queue *q,char x)
{
    if(q->rear == SIZE-1)
       {printf("Queue Overflow");
           exit(1);}
    else
    {
        q->rear++;
        q->item[q->rear]=x;
    }
}
char dequeue(struct queue *q)
{
    if(IsEmpty(q))
    {
        printf("Queue Overflow");
        exit(1);
    }
    char x=q->item[q->front];
    q->front++;
    return x;
}
void main()
{
    char y;
    struct queue myq;

    initialize(&myq);
    EnQueue(&myq,'a');
    EnQueue(&myq,'b');
    EnQueue(&myq,'c');
    EnQueue(&myq,'d');EnQueue(&myq,'e');
     y=dequeue(&myq);
    printf("Deleted Element : %c\n",y);
         y=dequeue(&myq);
    printf("Deleted Element : %c\n",y);
         y=dequeue(&myq);
    printf("Deleted Element : %c\n",y);
         y=dequeue(&myq);
    printf("Deleted Element : %c\n",y);
         y=dequeue(&myq);
    printf("Deleted Element : %c\n",y);
         y=dequeue(&myq);
    printf("Deleted Element : %c\n",y);
}
